/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.multichat;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author time0
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        this.setLocationRelativeTo(null);
        try {
            InetAddress IP = InetAddress.getLocalHost();
            jTextFieldIP.setText(String.valueOf(IP.getHostAddress()));
            jTextFieldPort.setText("8");
        } catch (UnknownHostException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMainClient = new javax.swing.JPanel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jLabelIP = new javax.swing.JLabel();
        jTextFieldIP = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jButtonConnection = new javax.swing.JButton();
        jPanelChatClient = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");
        setMinimumSize(new java.awt.Dimension(620, 440));
        setName("frameClient"); // NOI18N
        setResizable(false);

        jPanelMainClient.setBackground(new java.awt.Color(0, 102, 204));

        jLabelName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelName.setText("Name");

        jLabelIP.setForeground(new java.awt.Color(255, 255, 255));
        jLabelIP.setText("IP");

        jLabelPort.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPort.setText("Port");

        jButtonConnection.setText("Connection");
        jButtonConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnect(evt);
            }
        });

        javax.swing.GroupLayout jPanelMainClientLayout = new javax.swing.GroupLayout(jPanelMainClient);
        jPanelMainClient.setLayout(jPanelMainClientLayout);
        jPanelMainClientLayout.setHorizontalGroup(
            jPanelMainClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldName)
                    .addComponent(jLabelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldIP)
                    .addComponent(jTextFieldPort)
                    .addComponent(jButtonConnection, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addGroup(jPanelMainClientLayout.createSequentialGroup()
                        .addGroup(jPanelMainClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPort)
                            .addComponent(jLabelIP))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelMainClientLayout.setVerticalGroup(
            jPanelMainClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonConnection)
                .addContainerGap(242, Short.MAX_VALUE))
        );

        jPanelChatClient.setBackground(new java.awt.Color(255, 255, 255));
        jPanelChatClient.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelMainClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelChatClient, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelChatClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelMainClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnect(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnect
        try {
            // Lấy dữ liệu bao gồm name,ip,port
            ip = jTextFieldIP.getText();
            port = Integer.parseInt(jTextFieldPort.getText());
            name = jTextFieldName.getText();

            // Tạo một socket bằng ip và port ở trên
            socket = new Socket(ip, port);

            // Validation__________________________
            if (name.isEmpty()) throw new Exception("Empty Name");
            if (socket == null) throw new Exception("Null Socket");

            // Tạo một ChatPanel
            
            jPanelChatClient.removeAll();
            ChatPanel panel = new ChatPanel(socket, name, "Server");
            jPanelChatClient.add(panel);
            jPanelChatClient.updateUI();

            // Cho ChatPanel này "chạy" để kiểm tra tin nhắn đến và đi
            Thread thread = new Thread(panel);
            thread.start();
            
            // tắt chỉnh sửa
            jTextFieldName.setEditable(false);
            jTextFieldIP.setEditable(false);
            jTextFieldPort.setEditable(false);

//            panel.os.write(13);
//            panel.os.write(10);
//            panel.os.flush();

            // Thông báo chạy thành công
            JOptionPane.showMessageDialog(contentPane, "Connect success", "Connected",
                            JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(contentPane,
                            "Error while connect, please check details try again!\nDetails: " + e,
                            "Error while connect", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonConnect

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnection;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JPanel jPanelChatClient;
    private javax.swing.JPanel jPanelMainClient;
    private javax.swing.JTextField jTextFieldIP;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPort;
    // End of variables declaration//GEN-END:variables
    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    Socket socket = null;
    String ip = "";
    int port = 0;
    String name = "";
    BufferedReader bf = null;
    DataOutputStream os = null;
}
